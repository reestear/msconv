worker_processes  1;
error_log  /logs/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        access_log /logs/nginx/rtmp_access.log;

        application live {
            live on;
            record off;
            
            # Дозволяем всем пользователям подключаться и публиковать потоки
            allow publish all;
            allow play all;
            
            # Когда пользователь начинает стримить
            on_publish http://localhost/on_publish;
            
            # Когда пользователь останавливает публикацию потока  
            on_publish_done http://localhost/on_publish_done;
            
            # Когда кто-то подключается к потоку
            on_play http://localhost/on_play;
            
            # Когда кто-то прекращает воспроизведение потока
            on_play_done http://localhost/on_play_done;
                        
            # Форматирование логов для RTMP событий и редиректим в лог файл
            exec_publish echo "PUBLISH START: Stream=$name Client=$addr App=$app Time=$(date)" >> /logs/nginx/stream_events.log;
            exec_publish_done echo "PUBLISH END: Stream=$name Client=$addr App=$app Duration=$time Time=$(date)" >> /logs/nginx/stream_events.log;
            exec_play echo "PLAY START: Stream=$name Client=$addr App=$app Time=$(date)" >> /logs/nginx/stream_events.log;
            exec_play_done echo "PLAY END: Stream=$name Client=$addr App=$app Duration=$time Time=$(date)" >> /logs/nginx/stream_events.log;
        }
    }
    
    # Глобальный лог формат для RTMP
    log_format rtmp_combined '$remote_addr - [$time_local] "$command" "$app" "$name" "$args" - $bytes_received $bytes_sent "$flashver" "$swfurl" "$tcurl"';
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log  /logs/nginx/access.log detailed;
    error_log   /logs/nginx/error.log warn;

    server {
        listen  80;
        server_name  localhost;

        # Статическая страница для проверки работы сервера
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            
            access_log /logs/nginx/stats_access.log detailed;
        }

        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # Webhook endpoint-ы для RTMP событий
        
        location /on_connect {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /on_disconnect {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /on_publish {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /on_publish_done {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /on_play {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /on_play_done {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /on_update {
            access_log /logs/nginx/rtmp_events.log detailed;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        location /stream_logs {
            alias /logs/nginx/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
    }
}